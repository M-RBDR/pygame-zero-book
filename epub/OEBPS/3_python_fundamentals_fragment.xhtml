<?xml version="1.0" encoding="utf-8"?>
        <!DOCTYPE html>

        <html xmlns="http://www.w3.org/1999/xhtml">
        <head>
          <title>Chapter 2</title>
          <link rel="stylesheet" href="styles/pygments.css" type="text/css" />
          <link rel="stylesheet" href="styles/softcover.css" type="text/css" />
          <link rel="stylesheet" href="styles/epub.css" type="text/css" />
          <link rel="stylesheet" href="styles/custom.css" type="text/css"/>
          <link rel="stylesheet" href="styles/custom_epub.css" type="text/css"/>
          <link rel="stylesheet" type="application/vnd.adobe-page-template+xml" href="styles/page-template.xpgt" />
        </head>

        <body>
          <div id="cid9" class="chapter"><h1><a href="3_python_fundamentals_fragment.xhtml#cid9" class="heading hyperref"><span class="number">Chapter 2 </span>Python Fundamentals</a></h1>
<p class="noindent">There are some exercises here.<span class="intersentencespace"></span> Each exercise will ask you to write a program.<span class="intersentencespace"></span> The solution is
often on the following page - do not turn the page until you have attempted your own solution!<span class="intersentencespace"></span> Save each program in a separate file.</p>
<ul>
<li><strong>Instructor note:</strong> Unlike the rest of the book, these examples are not games.<span class="intersentencespace"></span> You may want to just discuss some of them, rather than having the students type them.<span class="intersentencespace"></span> Also you can skip this chapter entirely and leave it for motivated students to read at home, or use them to reinforce concepts from the games for students who need additional examples.<span class="intersentencespace"></span> There are also some more formal exercises here
that you can use to evaluate students in a more academic setting.<span class="intersentencespace"></span>
</li></ul>
</div><div id="cid10" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid10" class="heading hyperref"><span class="number">2.1 </span>The REPL</a></h2>
<p class="noindent">REPL stands for <em>Read Evaluate Print Loop</em>.<span class="intersentencespace"></span> In Mu you access it via the <code>REPL</code> button.<span class="intersentencespace"></span> It appears at the bottom of the window.<span class="intersentencespace"></span> It’s a special mode in which you type an instruction to Python and Python
executes it immediately (no need to click <code>RUN</code>) and displays the result (no need to type <code>print()</code>).<span class="intersentencespace"></span> It’s useful for doing calculations and trying things out, but it won’t save what you type, so you will
only want to use it for very short programs.</p>
<div class="graphics image"><img src="images/figures/repl.png" alt="images/figures/repl" /></div>
</div><div id="cid11" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid11" class="heading hyperref"><span class="number">2.2 </span>Arithmetic operators</a></h2>
<p class="noindent">Python understands several operators from maths.<span class="intersentencespace"></span> You can use them in your programs, or just enter these examples at the REPL to use Python as a calculator, as in the screenshot above.</p>
<table class="tabular"><tr class="top_border bottom_border"><td class="left_border align_left right_border">Operator</td>
<td class="align_left right_border">Symbol</td>
<td class="align_left right_border">Example</td>
<td class="align_left right_border">Result</td>
</tr><tr><td class="left_border align_left right_border">Addition</td>
<td class="align_left right_border">+</td>
<td class="align_left right_border">20 + 10</td>
<td class="align_left right_border">30</td>
</tr><tr><td class="left_border align_left right_border">Subtraction</td>
<td class="align_left right_border">-</td>
<td class="align_left right_border">20 - 10</td>
<td class="align_left right_border">10</td>
</tr><tr><td class="left_border align_left right_border">Multiplication</td>
<td class="align_left right_border">*</td>
<td class="align_left right_border">20 * 10</td>
<td class="align_left right_border">200</td>
</tr><tr class="bottom_border"><td class="left_border align_left right_border">Division</td>
<td class="align_left right_border">/</td>
<td class="align_left right_border">20 / 10</td>
<td class="align_left right_border">2</td>
</tr></table>
<p>There are some more advanced operators in <a href="3_python_fundamentals_fragment.xhtml#code-shortcuts" class="hyperref">Program <span class="ref">2.18</span></a></p>
</div><div id="cid12" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid12" class="heading hyperref"><span class="number">2.3 </span>Variables</a></h2>
<p class="noindent">A <em>variable</em> is a place in the computer’s memory where data is stored.<span class="intersentencespace"></span> You can name a variable whatever you like; you should
try to make the name descriptive.<span class="intersentencespace"></span> There are many <em>types</em> of variable but Python sets the type for us automatically
when we store data in the variable.<span class="intersentencespace"></span> (Unlike in many other languages, we do not need to specify the type.)<span class="intersentencespace"></span> The types we will see most
often are whole numbers (<em>integers</em>) and <em>strings</em> of text.</p>
<p>We create a variable and assign a value to it using the <code>=</code> operator.<span class="intersentencespace"></span> Note this is different from the <code>==</code> operator which is used for comparisons.</p>
<p>We use the <code>print()</code> function to print the value of our variables.<span class="intersentencespace"></span> It will print any type of data (numbers, strings, both literals and variables) provided each
item is separated with a comma (<code>,</code>).</p>
<div class="codelisting" id="code-variables"><div class="heading"><span class="number">Program 2.1:</span> <span class="description">Variable assignment</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">my_number</span> <span class="o">=</span> <span class="mi">7</span>
<span class="n">my_string</span> <span class="o">=</span> <span class="s2">"hello"</span>
<span class="k">print</span><span class="p">(</span><span class="n">my_string</span><span class="p">,</span> <span class="n">my_number</span><span class="p">)</span>
</pre></div></div></div><p>We can use a variable anywhere we would use a literal number or string.<span class="intersentencespace"></span> The value of the variable will be retrieved from the computer’s memory and substituted for the variable in any expression.</p>
<div class="codelisting" id="code-fruits"><div class="heading"><span class="number">Program 2.2:</span> <span class="description">Adding two variables together</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">apples</span> <span class="o">=</span> <span class="mi">27</span>
<span class="n">pears</span> <span class="o">=</span> <span class="mi">33</span>
<span class="n">fruits</span> <span class="o">=</span> <span class="n">apples</span> <span class="o">+</span> <span class="n">pears</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"Number of fruits:"</span><span class="p">,</span> <span class="n">fruits</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.1.</span> 

<span class="description"></span></div>
<p class="noindent">Copy <a href="3_python_fundamentals_fragment.xhtml#code-fruits" class="hyperref">Program <span class="ref">2.2</span></a>, but also add 17 bananas to the calculation of fruits.<span class="intersentencespace"></span></p>

</div><p>We can store a new value in the same variable.<span class="intersentencespace"></span> The old value will be forgotten.</p>
<div class="codelisting" id="code-overwriting"><div class="heading"><span class="number">Program 2.3:</span> <span class="description">Overwriting a variable with a new value</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">apples</span> <span class="o">=</span> <span class="mi">27</span>
<span class="n">apples</span> <span class="o">=</span> <span class="mi">40</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"Number of apples:"</span><span class="p">,</span> <span class="n">apples</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.2.</span> 

<span class="description"></span></div>
<p class="noindent">What do you think <a href="3_python_fundamentals_fragment.xhtml#code-overwriting" class="hyperref">Program <span class="ref">2.3</span></a> will print?<span class="intersentencespace"></span> If you aren’t sure, type it in.<span class="intersentencespace"></span></p>

</div><p>More usefully, we can take the old value, modify it, then store it back in the same variable.</p>
<div class="codelisting" id="code-mod_variables"><div class="heading"><span class="number">Program 2.4:</span> <span class="description">Modifying a variable</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">10</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">7</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.3.</span> 

<span class="description"></span></div>
<p class="noindent">What will <a href="3_python_fundamentals_fragment.xhtml#code-mod_variables" class="hyperref">Program <span class="ref">2.4</span></a> print?<span class="intersentencespace"></span> Change the numbers in the program.<span class="intersentencespace"></span> Use a division <code>/</code> operation.<span class="intersentencespace"></span> Then ask your friend to predict what the new program will print.<span class="intersentencespace"></span> Was he right?<span class="intersentencespace"></span></p>

</div><p>You will often see this used for counting:</p>
<div class="codelisting" id="code-counting"><div class="heading"><span class="number">Program 2.5:</span> <span class="description">Counting</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="mi">1</span>
<span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="mi">1</span>
<span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="mi">1</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.4.</span> 

<span class="description"></span></div>
<p class="noindent">What is the total count of <a href="3_python_fundamentals_fragment.xhtml#code-counting" class="hyperref">Program <span class="ref">2.5</span></a> ?<span class="intersentencespace"></span></p>

</div><p>See <a href="3_python_fundamentals_fragment.xhtml#code-shortcuts" class="hyperref">Program <span class="ref">2.18</span></a> for a quicker way of writing this.</p>
</div><div id="cid13" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid13" class="heading hyperref"><span class="number">2.4 </span>Input</a></h2>
<p class="noindent"><a href="3_python_fundamentals_fragment.xhtml#code-fruits" class="hyperref">Program <span class="ref">2.2</span></a> is not very useful if the number of apples changes.<span class="intersentencespace"></span> This would require the <em>programmer</em> to change the program.<span class="intersentencespace"></span> We can improve it by allowing the <em>user</em> of the program
to change the numbers.<span class="intersentencespace"></span> The <code>input()</code> function allows the user to type a string which can be different every time the program is run.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">my_string</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">my_string</span><span class="p">)</span>
</pre></div></div>
<p>Sometimes we want the user to type in a number rather than a string.<span class="intersentencespace"></span> We can combine the <code>int()</code> function with the <code>input()</code> function to convert the string to a number.</p>
<div class="codelisting" id="code-input3"><div class="heading"><span class="number">Program 2.6:</span> <span class="description">Getting input from user</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"Enter a number"</span><span class="p">)</span>
<span class="n">my_number</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"Double your number is"</span><span class="p">,</span> <span class="n">my_number</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.5.</span> 

<span class="description"></span></div>
<p class="noindent">Copy <a href="3_python_fundamentals_fragment.xhtml#code-fruits" class="hyperref">Program <span class="ref">2.2</span></a> but use <code>input()</code> to ask the user to enter the number of apples and pears.<span class="intersentencespace"></span></p>

</div></div><div id="cid14" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid14" class="heading hyperref"><span class="number">2.5 </span>Booleans</a></h2>
<p class="noindent">A <em>boolean</em> is another type of variable that is not a string or a number.<span class="intersentencespace"></span> It can have only two possible values: <code>True</code> or <code>False</code>.<span class="intersentencespace"></span> In some
languages and in electronics you may see these represented as <code>0</code> and <code>1</code>.</p>
<p>Booleans are used by keywords such as <code>if</code> and <code>while</code>.<span class="intersentencespace"></span> In an <code>if</code> statement, the indented code block is only run if the boolean is
<code>True</code>.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">sunny</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">if</span> <span class="n">a</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Let's go to the park"</span><span class="p">)</span>
</pre></div></div>
<p>You could write it like this:
</p><div class="code"><div class="highlight"><pre><span></span><span class="n">sunny</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">if</span> <span class="n">sunny</span><span class="o">==</span><span class="bp">True</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Let's go to the park"</span><span class="p">)</span>
</pre></div></div>
<p>but that would be redundant because <code>if</code> always tests if the boolean is <code>True</code>.</p>
<p>If the boolean is not true, and if you write an <code>else</code> clause, the indented code block under <code>else</code> is run instead.<span class="intersentencespace"></span> </p><div class="code"><div class="highlight"><pre><span></span><span class="n">sunny</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">if</span> <span class="n">sunny</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Let's go to the park"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"We must stay at home"</span><span class="p">)</span>
</pre></div></div>
</div><div id="cid15" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid15" class="heading hyperref"><span class="number">2.6 </span>Comparison operators</a></h2>
<p class="noindent">Comparison operators take two numbers, strings or other variables, compare them, and then return a <em>boolean</em> <code>True</code> or <code>False</code> from them.</p>
<table class="tabular"><tr class="top_border bottom_border"><td class="left_border align_left right_border">Operator</td>
<td class="align_left right_border">Symbol</td>
</tr><tr><td class="left_border align_left right_border">Equal</td>
<td class="align_left right_border">==</td>
</tr><tr><td class="left_border align_left right_border">Not equal</td>
<td class="align_left right_border">!=</td>
</tr><tr><td class="left_border align_left right_border">Less than</td>
<td class="align_left right_border">&lt;</td>
</tr><tr><td class="left_border align_left right_border">Less than or equal</td>
<td class="align_left right_border">&lt;=</td>
</tr><tr><td class="left_border align_left right_border">Greater than</td>
<td class="align_left right_border">&gt;</td>
</tr><tr class="bottom_border"><td class="left_border align_left right_border">Greater than or equal</td>
<td class="align_left right_border">&gt;=</td>
</tr></table>
<div class="codelisting" id="code-logic2"><div class="heading"><span class="number">Program 2.7:</span> <span class="description">Comparisons: greater than, lesser than, equal to</span>


.
</div>

<div class="code"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="mi">7</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"7 is less than 9"</span><span class="p">)</span>

<span class="n">a</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">5</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"a is equal to b"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"a is less than b"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"a is greater than b"</span><span class="p">)</span>
</pre></div></div></div></div><div id="cid16" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid16" class="heading hyperref"><span class="number">2.7 </span>Boolean logic</a></h2>
<p class="noindent">The <code>and</code>, <code>or</code> and <code>not</code> operators operate on booleans and return new boolean values.</p>
<div class="codelisting" id="code-logic"><div class="heading"><span class="number">Program 2.8:</span> <span class="description">Boolean operators</span>


.
</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="n">b</span> <span class="o">=</span> <span class="bp">False</span>

<span class="k">if</span> <span class="n">a</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"a is true"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">a</span> <span class="ow">and</span> <span class="n">b</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"a and b are both true"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">a</span> <span class="ow">or</span> <span class="n">b</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"either a or b is true"</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.6.</span> 

<span class="description"></span></div>
<p class="noindent">Change the values of <code>a</code> and <code>b</code> in Progam <a href="3_python_fundamentals_fragment.xhtml#code-logic" class="hyperref"><span class="ref">2.8</span></a> and see what output is printed by different combinations of <code>True</code> and <code>False</code>.<span class="intersentencespace"></span></p>

</div>
<div id="uid22" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid22" class="heading hyperref"><span class="number">2.7.1 </span>Or</a></h3>
<p class="noindent">Only people older than 12 or taller than 150cm are allowed to ride the rollercoaster.<span class="intersentencespace"></span> This program checks whether people are allowed to ride.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"How old are you?"</span><span class="p">)</span>
<span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"How tall are you?"</span><span class="p">)</span>
<span class="n">height</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">12</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"You can ride"</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">height</span> <span class="o">&gt;</span> <span class="mi">150</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"You can ride"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"YOU MAY NOT RIDE, GO AWAY!"</span><span class="p">)</span>
</pre></div></div>
<p>Boolean operators combine two truth values together.<span class="intersentencespace"></span> The <code>or</code> operator is <code>True</code> if either of its operands is true.<span class="intersentencespace"></span> Try this example:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="n">b</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span> <span class="ow">or</span> <span class="n">b</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.7.</span> 

<span class="description"></span></div>
<p class="noindent">Use the <code>or</code> operator to make the rollercoaster program shorter by combining the two tests into one test.<span class="intersentencespace"></span></p>

</div><p>A possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"How old are you?"</span><span class="p">)</span>
<span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"How tall are you?"</span><span class="p">)</span>
<span class="n">height</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">12</span> <span class="ow">or</span> <span class="n">height</span> <span class="o">&gt;</span> <span class="mi">150</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"You can ride"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"YOU MAY NOT RIDE, GO AWAY!"</span><span class="p">)</span>
</pre></div></div>
</div>
<div id="uid24" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid24" class="heading hyperref"><span class="number">2.7.2 </span>And</a></h3>
<p class="noindent">The <code>and</code> operator is <code>True</code> if both of its operands is true.<span class="intersentencespace"></span> Try this example:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="n">b</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span> <span class="ow">and</span> <span class="n">b</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.8.</span> 

<span class="description"></span></div>
<p class="noindent">The rollercoaster is only allowed to run on days when the temperature is less than 30 degrees.<span class="intersentencespace"></span> Extend the program to ask the temperature and use the <code>and</code> operator to only allow riding when less than 30 degrees.<span class="intersentencespace"></span></p>

</div><p>A possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"How old are you?"</span><span class="p">)</span>
<span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"How tall are you?"</span><span class="p">)</span>
<span class="n">height</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"What is the temperature?"</span><span class="p">)</span>
<span class="n">temp</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">if</span> <span class="p">(</span><span class="n">age</span> <span class="o">&gt;</span> <span class="mi">12</span> <span class="ow">or</span> <span class="n">height</span> <span class="o">&gt;</span> <span class="mi">150</span><span class="p">)</span> <span class="ow">and</span> <span class="n">temp</span> <span class="o">&lt;</span> <span class="mi">30</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"You can ride"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"YOU MAY NOT RIDE, GO AWAY!"</span><span class="p">)</span>
</pre></div></div>
<p>Note that we have put brackets around the <code>or</code> expression.<span class="intersentencespace"></span> This ensures it is calculated first and the result of that calculation
is then used in the <code>and</code> expression.<span class="intersentencespace"></span> This is the same way you use the BODMAS rule to decide the order of operations in maths.</p>
</div>
<div id="uid26" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid26" class="heading hyperref"><span class="number">2.7.3 </span>Not</a></h3>
<p class="noindent">The <code>not</code> operator is <code>True</code> if its operand is <code>False</code>.<span class="intersentencespace"></span> If its operand is <code>False</code> then it is <code>True</code>.<span class="intersentencespace"></span> Try this example:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="n">b</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">print</span><span class="p">(</span><span class="ow">not</span> <span class="n">a</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="ow">not</span> <span class="n">b</span><span class="p">)</span>
</pre></div></div>
<p>We can get a user input and convert it to a boolean like this:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"Is it raining? Y/N"</span><span class="p">)</span>
<span class="k">if</span> <span class="nb">input</span><span class="p">()</span> <span class="o">==</span> <span class="s2">"Y"</span><span class="p">:</span>
    <span class="n">raining</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">raining</span> <span class="o">=</span> <span class="bp">False</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.9.</span> 

<span class="description"></span></div>
<p class="noindent">Change the program so that you can only ride the rollercoaster if it is not raining.<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"Is it raining? Y/N"</span><span class="p">)</span>
<span class="k">if</span> <span class="nb">input</span><span class="p">()</span> <span class="o">==</span> <span class="s2">"Y"</span><span class="p">:</span>
    <span class="n">raining</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">raining</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"How old are you?"</span><span class="p">)</span>
<span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"How tall are you?"</span><span class="p">)</span>
<span class="n">height</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"What is the temperature?"</span><span class="p">)</span>
<span class="n">temp</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">if</span> <span class="p">(</span><span class="n">age</span> <span class="o">&gt;</span> <span class="mi">12</span> <span class="ow">or</span> <span class="n">height</span> <span class="o">&gt;</span> <span class="mi">150</span><span class="p">)</span> <span class="ow">and</span> <span class="n">temp</span> <span class="o">&lt;</span> <span class="mi">30</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">raining</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"You can ride"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"YOU MAY NOT RIDE, GO AWAY!"</span><span class="p">)</span>
</pre></div></div>
</div></div><div id="cid17" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid17" class="heading hyperref"><span class="number">2.8 </span>For loops</a></h2>
<p class="noindent">A <code>for</code> loop repeats a block of code a number of times.<span class="intersentencespace"></span> A variable is created which we can use to find the current number within the loop.<span class="intersentencespace"></span> Here
the variable is called <code>x</code> but you can name it whatever you like.<span class="intersentencespace"></span> Run this program:</p>
<div class="code"><div class="highlight"><pre><span></span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">11</span><span class="p">):</span>
     <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div></div>
<p>You can also change the <em>step</em> of the loop.<span class="intersentencespace"></span> Run this program:</p>
<div class="code"><div class="highlight"><pre><span></span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">2</span><span class="p">):</span>
     <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div></div>
<div id="uid28" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid28" class="heading hyperref"><span class="number">2.8.1 </span>Nested loops</a></h3>
<p class="noindent">It is often useful to put one loop inside another loop.</p>
<div class="codelisting" id="code-for_loop"><div class="heading"><span class="number">Program 2.9:</span> <span class="description">Nested for loop</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="s2">"times"</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="s2">"is"</span><span class="p">,</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.10.</span> 

<span class="description"></span></div>
<p class="noindent">Write a program which prints out the 12 times table.<span class="intersentencespace"></span></p>

</div></div>
<div id="uid31" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid31" class="heading hyperref"><span class="number">2.8.2 </span>Incrementing a variable in a loop</a></h3>
<p class="noindent">A baker has three customers.<span class="intersentencespace"></span> He asks them each how many cakes they want
so he knows how many he must bake.<span class="intersentencespace"></span> He writes this program.</p>
<div class="code"><div class="highlight"><pre><span></span> <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
 <span class="k">print</span><span class="p">(</span><span class="s2">"Customer"</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"how many cakes do you want?"</span><span class="p">)</span>
 <span class="n">cakes</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
 <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">cakes</span>
 <span class="k">print</span><span class="p">(</span><span class="s2">"Customer"</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s2">"how many cakes do you want?"</span><span class="p">)</span>
 <span class="n">cakes</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
 <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">cakes</span>
 <span class="k">print</span><span class="p">(</span><span class="s2">"Customer"</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s2">"how many cakes do you want?"</span><span class="p">)</span>
 <span class="n">cakes</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
 <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">cakes</span>
 <span class="k">print</span><span class="p">(</span><span class="s2">"I will bake"</span><span class="p">,</span> <span class="n">total</span><span class="p">,</span> <span class="s2">"cakes!"</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.11.</span> 

<span class="description"></span></div>
<p class="noindent">This program is longer than it needs to be.<span class="intersentencespace"></span> Write your own program that does the same thing using a <code>for</code> loop.<span class="intersentencespace"></span> It should be only 6 (or fewer) lines long.<span class="intersentencespace"></span></p>

</div><div class="codelisting" id="code-baker"><div class="heading"><span class="number">Program 2.10:</span> <span class="description">Possible solution to baker program exercise</span>


</div>

<div class="code"><div class="highlight"><pre><span></span> <span class="n">total</span><span class="o">=</span><span class="mi">0</span>
 <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
     <span class="k">print</span><span class="p">(</span><span class="s2">"Customer"</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="s2">"how many cakes do you want?"</span><span class="p">)</span>
     <span class="n">cakes</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
     <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">cakes</span>
 <span class="k">print</span><span class="p">(</span><span class="s2">"I will bake"</span><span class="p">,</span> <span class="n">total</span><span class="p">,</span> <span class="s2">"cakes!"</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.12.</span> 

<span class="description"></span></div>
<p class="noindent">The baker gets a fourth customer.<span class="intersentencespace"></span> Change <a href="3_python_fundamentals_fragment.xhtml#code-baker" class="hyperref">Program <span class="ref">2.10</span></a> so it works for 4 customers.<span class="intersentencespace"></span></p>

</div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.13.</span> 

<span class="description"></span></div>
<p class="noindent">The baker has a different number of customers every day.<span class="intersentencespace"></span> Change the program so it
asks how many customers there are.<span class="intersentencespace"></span> Store the number typed by the user in a variable
called <code>c</code>.<span class="intersentencespace"></span> Change the loop so it works for <code>c</code> customers rather than 4 customers.<span class="intersentencespace"></span></p>

</div><div class="codelisting" id="code-baker2"><div class="heading"><span class="number">Program 2.11:</span> <span class="description">Possible solution to variable number of customers exercise</span>


</div>

<div class="code"><div class="highlight"><pre><span></span> <span class="k">print</span><span class="p">(</span><span class="s2">"How many customers are there today?"</span><span class="p">)</span>
 <span class="n">c</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
 <span class="n">total</span><span class="o">=</span><span class="mi">0</span>
 <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
     <span class="k">print</span><span class="p">(</span><span class="s2">"Customer"</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="s2">"how many cakes do you want?"</span><span class="p">)</span>
     <span class="n">cakes</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
     <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">cakes</span>
 <span class="k">print</span><span class="p">(</span><span class="s2">"I will bake"</span><span class="p">,</span> <span class="n">total</span><span class="p">,</span> <span class="s2">"cakes!"</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.14.</span> 

<span class="description"></span></div>
<p class="noindent">If a customer orders 12 cakes, he gets an extra cake for free.<span class="intersentencespace"></span> Use an <code>if</code> statement to check <code>cakes &gt; 12</code>.<span class="intersentencespace"></span> If so, add one more cake.<span class="intersentencespace"></span></p>

</div></div></div><div id="cid18" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid18" class="heading hyperref"><span class="number">2.9 </span>Array lists</a></h2>
<p class="noindent">Variables can be stored together in a <em>list</em>.<span class="intersentencespace"></span> Most languages call this an <em>array</em> so try to remember that word also.<sup id="cha-2_footnote-ref-1" class="footnote"><a href="#cha-2_footnote-1">1</a></sup></p>
<div class="codelisting" id="code-arrays"><div class="heading"><span class="number">Program 2.12:</span> <span class="description">Array lists</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="c1"># a is a list of integers</span>

<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">74</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">21</span><span class="p">]</span>

<span class="c1"># b is a list of strings</span>

<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"hello"</span><span class="p">,</span> <span class="s2">"goodbye"</span><span class="p">]</span>

<span class="c1"># You can take a single element from the list.</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>

<span class="c1"># You can use a for loop to print every element.</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">a</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div></div></div>
<div id="uid40" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid40" class="heading hyperref"><span class="number">2.9.1 </span>Looping over lists</a></h3>
<p class="noindent">Rather than the user typing in data, your program might be supplied with data in a list.<span class="intersentencespace"></span> Here is a list of prices - a shopping list.<span class="intersentencespace"></span> Note we don’t use a currency symbol except when we print the price.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">prices</span> <span class="o">=</span> <span class="p">[</span><span class="mf">3.49</span><span class="p">,</span> <span class="mf">9.99</span><span class="p">,</span> <span class="mf">2.50</span><span class="p">,</span> <span class="mf">20.00</span><span class="p">]</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"item costs £"</span><span class="p">,</span> <span class="n">prices</span><span class="p">[</span><span class="n">x</span><span class="p">])</span>
</pre></div></div>
<p>In this program <code>x</code> is used an <em>index</em> for the array.<span class="intersentencespace"></span> Note that indices begin at <code>0</code> rather than <code>1</code>.<span class="intersentencespace"></span> If the array contains
4 elements then the final element will have index <code>3</code>, nor <code>4</code>.</p>
<p>However, <code>for</code> can directly give you all the array values without
the need for an index or to specify the size of the range:</p>
<div class="codelisting" id="code-shoppinglist"><div class="heading"><span class="number">Program 2.13:</span> <span class="description">A shopping list</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">prices</span> <span class="o">=</span> <span class="p">[</span><span class="mf">3.49</span><span class="p">,</span> <span class="mf">9.99</span><span class="p">,</span> <span class="mf">2.50</span><span class="p">,</span> <span class="mf">20.00</span><span class="p">]</span>
<span class="k">for</span> <span class="n">price</span> <span class="ow">in</span> <span class="n">prices</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"item costs £"</span><span class="p">,</span> <span class="n">price</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.15.</span> 

<span class="description"></span></div>
<p class="noindent">Change the <a href="3_python_fundamentals_fragment.xhtml#code-shoppinglist" class="hyperref">Program <span class="ref">2.13</span></a> so that it prints the total price of all the items added together.<span class="intersentencespace"></span></p>

</div><div class="codelisting" id="code-shoppinglist2"><div class="heading"><span class="number">Program 2.14:</span> <span class="description">Possible way of calculating the total cost of shopping list</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">prices</span> <span class="o">=</span> <span class="p">[</span><span class="mf">3.49</span><span class="p">,</span> <span class="mf">9.99</span><span class="p">,</span> <span class="mf">2.50</span><span class="p">,</span> <span class="mf">20.00</span><span class="p">]</span>
<span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">price</span> <span class="ow">in</span> <span class="n">prices</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"item costs £"</span><span class="p">,</span> <span class="n">price</span><span class="p">)</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">price</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"shopping total"</span><span class="p">,</span> <span class="n">total</span><span class="p">)</span>
</pre></div></div></div><p>There is a problem with solution, can you see what it is when you run it?</p>
<p>The problem is that we are using <em>floating point</em> numbers for the prices and floating point maths in the computer is not entirely accurate, so the answer will be very slightly wrong.<span class="intersentencespace"></span> One way to fix this is to round the result to two decimal places using the <code>round()</code> function:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">print</span><span class="p">(</span><span class="s2">"shopping total"</span><span class="p">,</span> <span class="nb">round</span><span class="p">(</span><span class="n">total</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</pre></div></div>
<p>This works for a short list, but if the list was millions of items long it might not give the right result.<span class="intersentencespace"></span> Can you think of a better way?</p>
<p>Instead of storing the number of pounds, store the the number of pennies.<span class="intersentencespace"></span> Britain no longer has a half-penny, so the numbers will always be whole numbers - <em>integers</em> - and
no floating points will be needed for the addition.</p>
<div class="codelisting" id="code-shoppinglist3"><div class="heading"><span class="number">Program 2.15:</span> <span class="description">Better way of calculating the total cost of shopping list</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">prices</span> <span class="o">=</span> <span class="p">[</span><span class="mi">349</span><span class="p">,</span> <span class="mi">999</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="mi">2000</span><span class="p">]</span>
<span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">price</span> <span class="ow">in</span> <span class="n">prices</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"item costs £"</span><span class="p">,</span> <span class="n">price</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">price</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"shopping total"</span><span class="p">,</span> <span class="n">total</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.16.</span> 

<span class="description"></span></div>
<p class="noindent">Conditional discount.<span class="intersentencespace"></span> Any item that costs more than £10 will be discounted by 20 percent.<span class="intersentencespace"></span> Use an <code>if</code> statement to check if the price is more than 1000 pennies.<span class="intersentencespace"></span> If it is, multiply the price by 0.8 to reduce it before you add it to the total.<span class="intersentencespace"></span></p>

</div><div class="codelisting" id="code-shoppinglist4"><div class="heading"><span class="number">Program 2.16:</span> <span class="description">Possible way of discounting shopping list</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">prices</span> <span class="o">=</span> <span class="p">[</span><span class="mi">349</span><span class="p">,</span> <span class="mi">999</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="mi">2000</span><span class="p">]</span>
<span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">price</span> <span class="ow">in</span> <span class="n">prices</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"item costs £"</span><span class="p">,</span> <span class="n">price</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">price</span> <span class="o">&gt;</span> <span class="mi">1000</span><span class="p">:</span>
        <span class="n">price</span> <span class="o">=</span> <span class="n">price</span> <span class="o">*</span> <span class="mf">0.8</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">"  item discounted to"</span><span class="p">,</span> <span class="n">price</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">price</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"shopping total"</span><span class="p">,</span> <span class="n">total</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span>
</pre></div></div></div></div></div><div id="cid19" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid19" class="heading hyperref"><span class="number">2.10 </span>Functions</a></h2>
<p class="noindent">You may have seen specially named functions that are called by Pygame: <code>draw()</code> and <code>update()</code>.<span class="intersentencespace"></span> However, you can define a function named whatever you like and call it yourself.</p>
<p>Functions are useful for many reasons.<span class="intersentencespace"></span> The simplest is that they make your program look more organized.<span class="intersentencespace"></span> They also enable you re-use code without
needing to copy it and risk making mistakes.<span class="intersentencespace"></span> When your programs get longer they enable you to create <em>abstractions</em> so you only have to think about
what function you want to call and don’t need to remember the details of the code inside the function.</p>
<div class="codelisting" id="code-functions"><div class="heading"><span class="number">Program 2.17:</span> <span class="description">Functions</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">my_func</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"This is my function"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Imagine there was lots of code here"</span>
          <span class="s2">" that you didnt want to type 3 times"</span><span class="p">)</span>


<span class="n">my_func</span><span class="p">()</span>
<span class="n">my_func</span><span class="p">()</span>
<span class="n">my_func</span><span class="p">()</span>
</pre></div></div></div></div><div id="cid20" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid20" class="heading hyperref"><span class="number">2.11 </span>Shortcuts</a></h2>
<p class="noindent">Here are quicker ways of doing basic things.<span class="intersentencespace"></span> You may have noticed some of these being used already.</p>
<div class="codelisting" id="code-shortcuts"><div class="heading"><span class="number">Program 2.18:</span> <span class="description">Shortcuts</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="c1"># f is an easy way to insert variables into strings</span>
<span class="n">score</span> <span class="o">=</span> <span class="mi">56</span>
<span class="n">name</span> <span class="o">=</span> <span class="s2">"Richard"</span>
<span class="n">message</span> <span class="o">=</span> <span class="n">f</span><span class="s2">"{name} scored {score} points"</span>
<span class="k">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>

<span class="c1"># += is an easy way to increase the value of a variable</span>
<span class="n">score</span> <span class="o">=</span> <span class="n">score</span> <span class="o">+</span> <span class="mi">10</span>  <span class="c1"># hard way</span>
<span class="n">score</span> <span class="o">+=</span> <span class="mi">10</span>         <span class="c1"># easy way</span>
<span class="k">print</span><span class="p">(</span><span class="n">score</span><span class="p">)</span>

<span class="c1"># double / means whole number division, no decimals</span>
<span class="n">x</span> <span class="o">=</span> <span class="mi">76</span> <span class="o">//</span> <span class="mi">10</span>
<span class="c1"># MODULO is the percent sign %. It means do division and take the remainder.</span>
<span class="n">remainder</span> <span class="o">=</span> <span class="mi">76</span> <span class="o">%</span> <span class="mi">10</span>
<span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s2">"76 divided by 10 is {x} and the remainder is {remainder}"</span><span class="p">)</span>

<span class="n">WIDTH</span> <span class="o">=</span> <span class="mi">500</span>
<span class="n">a</span> <span class="o">=</span> <span class="mi">502</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">502</span>
<span class="c1"># Modulo is often used as a shortcut to reset a number back</span>
<span class="c1"># to zero if it gets too big.  So instead of:</span>
<span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">WIDTH</span><span class="p">:</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">-</span> <span class="n">WIDTH</span>
<span class="c1"># You could simply do:</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">b</span> <span class="o">%</span> <span class="n">WIDTH</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>

<span class="c1"># input() takes a string argument which it prints out.</span>
<span class="c1"># Instead of:</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"Enter a number"</span><span class="p">)</span>
<span class="n">num</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="c1"># You can have a single line:</span>
<span class="n">num</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">"Enter a number"</span><span class="p">)</span>
</pre></div></div></div></div><div id="cid21" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid21" class="heading hyperref"><span class="number">2.12 </span>Indentation</a></h2>
<p class="noindent">Code is arranged in <em>blocks</em>.<span class="intersentencespace"></span> For example, a <em>function</em> consists of a one line declaration followed by a block of several lines of code.<span class="intersentencespace"></span> Similarly, all the lines
of a loop form one block.<span class="intersentencespace"></span> A <em>conditional</em> has a block of code following the <code>if</code> statement (and optionally blocks after the <code>elif</code> and <code>else</code>.<span class="intersentencespace"></span> )</p>
<p>Many languages use <code>{}</code> or <code>()</code> to delimit a block.<span class="intersentencespace"></span> However Python is unusual: each block begins with <code>:</code> and then all the lines of the block
are <em>indented</em> by the same amount of whitespace (tabs or spaces).<span class="intersentencespace"></span> The block ends when the indentation ends.</p>
<p>Blocks can be <em>nested</em> inside other blocks.</p>
<div class="codelisting" id="code-blocks"><div class="heading"><span class="number">Program 2.19:</span> <span class="description">Can you predict what this program will print?</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">test</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"entering function block"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">"entering for loop block"</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s2">"in if block"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">"leaving for loop block"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"leaving function block"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"not in any block"</span><span class="p">)</span>
<span class="n">test</span><span class="p">()</span>
</pre></div></div></div></div><div id="cid22" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid22" class="heading hyperref"><span class="number">2.13 </span>Global variables</a></h2>
<p class="noindent">A variable defined inside a function has <em>local scope</em>: it cannot be used outside of the function.<span class="intersentencespace"></span> If you want to use the same
variable in different functions then you must define it outside the functions, in the <em>global scope</em>.<span class="intersentencespace"></span> However, if you attempt to
modify the value of the global variable inside a function you will get an error, or - even worse - you will create a local variable with the same name as the global variable
and your changes to the global variable will be silently lost.</p>
<p>You must explicitly tell Python that you
want to use a global variable with the <code>global</code> keyword.</p>
<div class="codelisting" id="code-globals"><div class="heading"><span class="number">Program 2.20:</span> <span class="description">Try removing line 3 and see what happens</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">10</span>
<span class="k">def</span> <span class="nf">my_function</span><span class="p">():</span>
    <span class="k">global</span> <span class="n">a</span>
    <span class="n">a</span><span class="o">=</span><span class="mi">20</span>
<span class="n">my_function</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</pre></div></div></div></div><div id="cid23" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid23" class="heading hyperref"><span class="number">2.14 </span>Dictionaries</a></h2>
<p class="noindent">A dictionary (called a <em>HashMap</em> in some languages) stores pairs of values.<span class="intersentencespace"></span> You can use the first value to look-up the second,
just like how you look-up a word in a dictionary to find its meaning.<span class="intersentencespace"></span> Here is a dictionary of the ages of my friends:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"What is your name?"</span><span class="p">)</span>
<span class="n">name</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="n">age</span> <span class="o">=</span> <span class="n">friends</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"Your age is"</span><span class="p">,</span> <span class="n">age</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.17.</span> 

<span class="description"></span></div>
<p class="noindent">Change the program so it contains 5 of your friends’ ages.<span class="intersentencespace"></span></p>

</div>
<div id="uid52" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid52" class="heading hyperref"><span class="number">2.14.1 </span>Counting</a></h3>
<p class="noindent">Here is a loop that prints out all the ages:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s2">"is age"</span><span class="p">,</span> <span class="n">age</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.18.</span> 

<span class="description"></span></div>
<p class="noindent">Can you add an <code>if</code> statement to only print the ages of friends older than 10?<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s2">"is age"</span><span class="p">,</span> <span class="n">age</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.19.</span> 

<span class="description"></span></div>
<p class="noindent">Now add a <code>count</code> variable that counts how many of the friends are older than 10.<span class="intersentencespace"></span> Print the number at the end.<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="p">:</span>
        <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"friends older than 10:"</span><span class="p">,</span><span class="n">count</span><span class="p">)</span>
</pre></div></div>
</div>
<div id="uid55" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid55" class="heading hyperref"><span class="number">2.14.2 </span>Combining tests</a></h3>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.20.</span> 

<span class="description"></span></div>
<p class="noindent">Use the <code>and</code> operator together with the <code>&lt;</code> and <code>&gt;</code> operators to only count friends between the ages of 11 to 13.<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="ow">and</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">14</span><span class="p">:</span>
        <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"friends age 11 to 13 :"</span><span class="p">,</span><span class="n">count</span><span class="p">)</span>
</pre></div></div>
</div>
<div id="uid57" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid57" class="heading hyperref"><span class="number">2.14.3 </span>Finding</a></h3>
<p class="noindent">We make a variable <code>oldest</code> that will contain the oldest age in the list.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="n">oldest</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="n">oldest</span><span class="p">:</span>
        <span class="n">oldest</span> <span class="o">=</span> <span class="n">age</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"oldest age"</span><span class="p">,</span> <span class="n">oldest</span><span class="p">)</span>
</pre></div></div>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.21.</span> 

<span class="description"></span></div>
<p class="noindent">Make a variable <code>youngest</code> that will contain the youngest age in the list.<span class="intersentencespace"></span> Print the youngest at the end.<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="n">oldest</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">youngest</span> <span class="o">=</span> <span class="mi">100</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="n">oldest</span><span class="p">:</span>
        <span class="n">oldest</span> <span class="o">=</span> <span class="n">age</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="n">youngest</span><span class="p">:</span>
        <span class="n">youngest</span> <span class="o">=</span> <span class="n">age</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"oldest age"</span><span class="p">,</span> <span class="n">oldest</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"youngest age"</span><span class="p">,</span> <span class="n">youngest</span><span class="p">)</span>
</pre></div></div>
</div>
<div id="uid59" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid59" class="heading hyperref"><span class="number">2.14.4 </span>Finding names</a></h3>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.22.</span> 

<span class="description"></span></div>
<p class="noindent">As well as the ages, print the names of the youngest and oldest friends.<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="n">oldest</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">youngest</span> <span class="o">=</span> <span class="mi">100</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="n">oldest</span><span class="p">:</span>
        <span class="n">oldest</span> <span class="o">=</span> <span class="n">age</span>
        <span class="n">oldname</span> <span class="o">=</span> <span class="n">name</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="n">youngest</span><span class="p">:</span>
        <span class="n">youngest</span> <span class="o">=</span> <span class="n">age</span>
        <span class="n">youngname</span> <span class="o">=</span> <span class="n">name</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"oldest friend"</span><span class="p">,</span> <span class="n">oldname</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"youngest friend"</span><span class="p">,</span> <span class="n">youngname</span><span class="p">)</span>
</pre></div></div>
</div>
<div id="uid61" class="subsection"><h3><a href="3_python_fundamentals_fragment.xhtml#uid61" class="heading hyperref"><span class="number">2.14.5 </span>Find the average</a></h3>
<div class="aside" id=""><div class="heading"><span class="number">Exercise 2.23.</span> 

<span class="description"></span></div>
<p class="noindent">Create a <code>total</code> variable.<span class="intersentencespace"></span> Add each age to the total.<span class="intersentencespace"></span> At the end, calculate the average by dividing the total by the number of friends.<span class="intersentencespace"></span></p>

</div><p>Possible solution:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">friends</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'richard'</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="s1">'john'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'paul'</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
<span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="ow">in</span> <span class="n">friends</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="n">age</span>
<span class="n">average</span> <span class="o">=</span> <span class="n">total</span> <span class="o">/</span> <span class="mi">3</span>
<span class="k">print</span><span class="p">(</span><span class="s2">"average age is "</span><span class="p">,</span> <span class="n">average</span><span class="p">)</span>
</pre></div></div>
</div></div><div id="cid24" class="section"><h2><a href="3_python_fundamentals_fragment.xhtml#cid24" class="heading hyperref"><span class="number">2.15 </span>Bugs</a></h2>
<p class="noindent">Fixing bugs can feel frustrating but all programmers must wrestle with them.<span class="intersentencespace"></span> The simplest (but still annoying!)<span class="intersentencespace"></span> are <em>syntax errors</em>.<span class="intersentencespace"></span> The computer is not very intelligent and is unable to guess what you mean, so you must type the programs in this book <strong>exactly</strong> as they appear.<span class="intersentencespace"></span> A single wrong letter or space will prevent them from working.</p>
<p>A particular issue in Python is that <em>indentation</em> must be correct.</p>
<div class="codelisting" id="code-bug1"><div class="heading"><span class="number">Program 2.21:</span> <span class="description">Buggy program</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">10</span>
 <span class="n">y</span> <span class="o">=</span> <span class="mi">11</span>
<span class="n">z</span> <span class="o">=</span> <span class="mi">12</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="p">)</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.24.</span> 

<span class="description"></span></div>
<p class="noindent">Can you spot and fix the bug in <a href="3_python_fundamentals_fragment.xhtml#code-bug1" class="hyperref">Program <span class="ref">2.21</span></a>?<span class="intersentencespace"></span></p>

</div><div class="codelisting" id="code-bug2"><div class="heading"><span class="number">Program 2.22:</span> <span class="description">More bugs</span>


</div>

<div class="code"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">myfunction</span><span class="p">:</span>
    <span class="k">print</span> <span class="s2">"hello"</span>

<span class="n">myfunction</span><span class="p">()</span>
</pre></div></div></div><div class="aside" id=""><div class="heading"><span class="number">Exercise 2.25.</span> 

<span class="description"></span></div>
<p class="noindent"><a href="3_python_fundamentals_fragment.xhtml#code-bug2" class="hyperref">Program <span class="ref">2.22</span></a> has two bugs to fix.<span class="intersentencespace"></span></p>

</div></div><div id="cha-2_footnotes">
  <div class="footnotes">
    <div id="cha-2_footnote-1" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-1">1.</a> There are other kinds of list that are not arrays but this need not concern the beginner.</div>
  </div>
</div>
        </body>
        </html>